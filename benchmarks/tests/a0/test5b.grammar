traversal fuse {
    case Group {
        iterate l { recur l; }
        iterate r { recur r; }
        ??;
    }
}
interface Element {
    output v : int;
    output p : int;
    input isLeaf : bool;
}
class Group : Element {
    children {
        l : [Element];
        r : [Element];
    }
    rules {
        self.p :=
            if self.isLeaf then
                -1
            else
                [0]{ l.v : 0 } / self.v;

        self.v := 
            if self.isLeaf then
                1
            else
                [0]{ l.v : 0 } + [0]{ r.v : 0 };

        
    }
}