traversal fuse {
    case Group {
        iterate leftChild { recur leftChild; }
        iterate rightChild { recur rightChild; }
        ??;
    }
}
interface Element {
    output storedValue : int;
    input isLeaf : bool;
}
class Group : Element {
    children { 
        leftChild : [Element];
        rightChild : [Element];
    }
    rules {
        self.storedValue := 
            if self.isLeaf then
                0
            else
                [0]{leftChild.storedValue : 0} + [0]{rightChild.storedValue : 0};
    }
}