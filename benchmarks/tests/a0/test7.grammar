traversal fuse {
    case Container {
        ??;
        recur root;
    }
    case Node {
        ??;
        iterate kids { ??; recur kids; ??; }
        ??;
    }
}

interface ContainerInterface {
}

class Container : ContainerInterface {
    children {
        root : NodeInterface;
    }
    rules {
        root.v := 999;
    }
}


interface NodeInterface {
    output v : int;
}

class Node : NodeInterface {
    children {
        kids : [NodeInterface];
    }
    rules {
        kids.v := self.v;
    }
}