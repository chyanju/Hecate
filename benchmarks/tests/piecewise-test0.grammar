// basic skeleton for piecewise function
// run with: ./run.rkt --root VirtualRoot fuse benchmarks/tests/piecewise-test0.grammar
// this works

traversal fuse {
    case CVirtualRoot {
        recur root;
    }
    case CNode {
        iterate left { recur left; }
        iterate right { recur right; }
        ??;
    }
}

// ============================= //
// ========== Program ========== //
// ============================= //

interface VirtualRoot {
    
}
class CVirtualRoot : VirtualRoot {
    children {
        root : Node;
    }
    rules {
    }
}

interface Node {
    // isLeaf property related
    output id : bool;
    output has_left : bool;
    output has_right : bool;
    output is_leaf : bool;
}
class CNode : Node {
    children {
        left : [Node]; // 0 or 1
        right : [Node]; // 0 or 1
    }
    rules {
        // isLeaf property computation
        self.id := true;
        self.is_leaf := self.has_left && self.has_right;
        self.has_left := [0]{ left.id : !true };
        self.has_right := [0]{ right.id : !true };
    }
}























