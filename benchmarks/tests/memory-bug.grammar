// mini example that causes big memory allocation
// run it with: 
// ./run.rkt --root Function fuse benchmarks/tests/memory-bug.grammar

traversal fuse {
    // case CProgram {
    // }
    case CFunction {
    }

    // assignment series
    case AssignmentStatement {
    }
    case IfStatement {
    }

    // expression series
    case ConstantExpression {
    }
    case BinaryExpression {
    }
    case VarRefExpression {
    }
}

// ============================= //
// ========== Program ========== //
// ============================= //

// interface Program {
    
// }
// class CProgram : Program {
//     children {
//         first_function : [Function];
//     }
//     rules {
//     }
// }

// ============================== //
// ========== Function ========== //
// ============================== //

interface Function {
    
}
class CFunction : Function {
    children {
        next : [Function];
        first_statement : [Statement];
    }
    rules {
    }
}

// =============================== //
// ========== Statement ========== //
// =============================== //

interface Statement {

}

class AssignmentStatement : Statement {
    children {
        assigned_expr : Expression;
        next : [Statement];
    }
    rules {
    }
}
class IfStatement : Statement {
    children {
        condition : Expression;
        then_first_statement : [Statement];
        else_first_statement : [Statement];
    }
    rules {
    }
}


// ================================ //
// ========== Expression ========== //
// ================================ //

interface Expression {
}
class ConstantExpression : Expression {
    children {
    }
    rules {
    }
}
class BinaryExpression : Expression {
    children {
        // for binary expression, lhs and rhs *must* exist
        lhs : Expression;
        rhs : Expression;
    }
    rules {
    }
}
class VarRefExpression : Expression {
    children {
    }
    rules {
    }
}
