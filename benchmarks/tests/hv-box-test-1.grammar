// 
// run with: ./run.rkt --root VirtualRoot fuse benchmarks/tests/hv-box-test-1.grammar
//
// this works but takes slightly long

traversal fuse {
    case VRBox {
        recur root;
    }
    case HBox {
        recur l;
        recur r;
        ??;
    }
    case VBox {
        recur t;
        recur b;
        ??;
    }
    case Leaf {
        ??;
    }
}

interface VirtualRoot {

}
class VRBox : VirtualRoot {
    children {
        root : HVBox;
    }
    rules {
    }
}

interface HVBox {
    output w : int;
    output h : int;
    input w0 : int; // for Leaf
    input h0 : int; // for Leaf
}
class HBox : HVBox {
    children {
        l : HVBox;
        r : HVBox;
    }
    rules {
        // l.x := self.x;
        // r.x := self.x + l.w;

        // l.y := self.y;
        // r.y := self.y;

        self.w := l.w + r.w;
        self.h := max( l.h, r.h );
    }
}
class VBox : HVBox {
    children {
        t : HVBox;
        b : HVBox;
    }
    rules {
        // t.x := self.x;
        // b.x := self.x;

        // t.y := self.y + b.h;
        // b.y := self.y;

        self.w := max( t.w, b.w );
        self.h := t.h + b.h;
    }
}
class Leaf : HVBox {
    children {

    }
    rules {
        self.w := self.w0;
        self.h := self.h0;
    }
}




















