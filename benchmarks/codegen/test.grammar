traversal fuse {
    case CRoot {
        ??;
        recur root;
        ??;
    }
    case CNode {
        ??;
        iterate l { ??; recur l; }
        iterate r { ??; recur r; }
        ??;
    }
}

interface Root {
    // the user inputs the value to insert from the root node
    input valToInsert : int;

    // the user inputs the value to search from the root node
    input valToSearch : int;

    // returns whether the value is found or not
    // if the valToSearch is null, return false
    output valFound : bool;
}

class CRoot : Root {
    children {
        root : Node;
    }
    rules {
        root.valToInsert := 1-1 + 0;
        root.valToInsert := self.valToInsert;
        root.valToSearch := self.valToSearch;

        self.valFound := root.valFound;
    }
}