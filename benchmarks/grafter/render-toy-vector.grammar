traversal layout {
	case CBox {
		iterate contents {
			recur contents;
			??;
		}
		??;
	}
}

interface Box {
	input width : px;
	output computedWidth : px;

	input height : px;
	output cumulativeHeight : px; // helper for computedHeight of parent
	output computedHeight : px;
}

class CBox : Box {
	children {
		contents : [Box];
	}
	rules {
		self.computedWidth := foldl self.width .. max( @{self.computedWidth}, contents.computedWidth );
		self.cumulativeHeight := foldl 0.0 .. @{self.cumulativeHeight} + contents.computedHeight;
		self.computedHeight := max( self.height, self.cumulativeHeight );
	}
}